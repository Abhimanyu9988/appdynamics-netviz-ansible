# deploy-netviz.yml
# Complete NetViz deployment playbook with OAuth authentication and permission fixes

---
- name: Deploy AppDynamics NetViz Agent
  hosts: netviz_servers
  become: yes
  vars:
    # NetViz Configuration
    netviz_version: "25.7.0.3267"
    netviz_install_dir: "/opt/appdynamics/netviz"
    oauth_url: "https://identity.msrv.saas.appdynamics.com/v2.0/oauth/token"
    netviz_download_url: "https://download.appdynamics.com/download/prox/download-file/netviz-deb/{{ netviz_version }}/appd-netviz-x64-linux-{{ netviz_version }}.deb"
    netviz_checksum: "sha256:35cb07adf9a78b2b8ffaf1c37711d1a3f362d13e1165eed52464f4b90152d2d3"

  tasks:
    - name: Include controller configuration
      include_vars: "vars/controller.yaml"

    - name: Include vault secrets
      include_vars: "vars/vault.yaml"

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - curl
          - wget
          - net-tools
          - iproute2
          - tcpdump
        state: present

    - name: Create appd-netviz group (service file expects this user)
      group:
        name: appd-netviz
        state: present

    - name: Create appd-netviz user (service file expects this user)
      user:
        name: appd-netviz
        group: appd-netviz
        system: yes
        shell: /bin/false
        home: /opt/appdynamics
        create_home: yes
        state: present

    - name: Get OAuth access token
      uri:
        url: "{{ oauth_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          username: "{{ vault_oauth_username }}"
          password: "{{ vault_oauth_password }}"
          scopes: ["download"]
        status_code: 200
      register: oauth_response
      delegate_to: localhost
      run_once: true
      no_log: true

    - name: Set access token fact
      set_fact:
        access_token: "{{ oauth_response.json.access_token }}"
      no_log: true

    - name: Create temporary download directory
      tempfile:
        state: directory
        suffix: netviz
      register: temp_dir

    - name: Download NetViz DEB with OAuth token
      get_url:
        url: "{{ netviz_download_url }}"
        dest: "{{ temp_dir.path }}/netviz-agent.deb"
        headers:
          Authorization: "Bearer {{ access_token }}"
        checksum: "{{ netviz_checksum }}"
        mode: '0644'
        timeout: 300

    - name: Install NetViz Agent DEB package
      apt:
        deb: "{{ temp_dir.path }}/netviz-agent.deb"
        state: present

    - name: Create NetViz required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: appd-netviz
        group: appd-netviz
        mode: '0755'
      loop:
        - "{{ netviz_install_dir }}"
        - "{{ netviz_install_dir }}/conf"
        - "{{ netviz_install_dir }}/logs"
        - "{{ netviz_install_dir }}/run"

    - name: Set proper ownership for NetViz installation
      file:
        path: "{{ netviz_install_dir }}"
        owner: appd-netviz
        group: appd-netviz
        recurse: yes
        state: directory

    - name: Create NetViz configuration
      copy:
        content: |
          -- AppDynamics NetViz Agent Configuration
          agent_type = "netviz"
          agent_name = "{{ inventory_hostname }}_netviz_agent"
          
          -- Controller Configuration
          controller_host = "{{ controller_host }}"
          controller_port = {{ controller_port }}
          controller_ssl_enabled = {{ controller_ssl_enabled }}
          account_name = "{{ controller_account_name }}"
          access_key = "{{ controller_access_key }}"
          
          -- Network Configuration
          webservice_port = {{ netviz_webservice_port | default(3892) }}
          webservice_ip = "0.0.0.0"
          
          -- Logging Configuration
          log_level = "{{ netviz_log_level | default('info') }}"
          log_file_size = "10MB"
          log_file_count = 5
          
          -- Advanced Configuration
          enable_netlib = 1
          enable_docker_monitoring = 1
        dest: "{{ netviz_install_dir }}/conf/agent_config.lua"
        owner: appd-netviz
        group: appd-netviz
        mode: '0644'
        backup: yes

    - name: Start NetViz service (using working pattern)
      systemd:
        name: appd-netviz
        state: started
        enabled: yes
      register: service_start
      ignore_errors: yes

    - name: Wait for NetViz to start (check port)
      wait_for:
        port: "{{ netviz_webservice_port | default(3892) }}"
        host: localhost
        timeout: 30
      ignore_errors: yes
      register: port_check

    - name: Check NetViz service status
      command: systemctl status appd-netviz
      register: service_status
      changed_when: false
      ignore_errors: yes

    - name: Display service status
      debug:
        msg: "{{ service_status.stdout_lines }}"

    - name: Display port check result
      debug:
        msg: "NetViz agent {{ 'is' if port_check is not failed else 'is NOT' }} listening on port {{ netviz_webservice_port | default(3892) }}"

    - name: Verify NetViz process status
      command: "{{ netviz_install_dir }}/bin/appd-netviz.sh status"
      register: process_status
      changed_when: false
      failed_when: false

    - name: Display deployment results
      debug:
        msg: 
          - "✓ NetViz Agent deployment completed!"
          - "✓ Service start attempted: {{ 'Success' if service_start is not failed else 'Failed' }}"
          - "✓ Port {{ netviz_webservice_port | default(3892) }} status: {{ 'Listening' if port_check is not failed else 'Not listening - check service' }}"
          - "✓ Process status: {{ 'Running' if process_status.rc == 0 else 'Check logs for details' }}"
          - "✓ Check your AppDynamics Controller → Infrastructure → Network Visibility"

    - name: Display troubleshooting info if needed
      debug:
        msg:
          - "⚠️  If service is not working properly, try these commands:"
          - "   sudo systemctl status appd-netviz"
          - "   sudo journalctl -u appd-netviz -f"
          - "   sudo tail -f {{ netviz_install_dir }}/logs/agent.log"
          - "   sudo netstat -tlnp | grep {{ netviz_webservice_port | default(3892) }}"
          - "   sudo chown -R appd-netviz:appd-netviz {{ netviz_install_dir }}"
      when: port_check is failed or service_start is failed

    - name: Clean up temporary files
      file:
        path: "{{ temp_dir.path }}"
        state: absent